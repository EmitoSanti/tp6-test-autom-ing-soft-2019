// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
public class PrimertestautomatizadoTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void primertestautomatizado() {
    // Test name: Primer test-automatizado
    // Step # | name | target | value | comment
    // 1 | open | http://newtours.demoaut.com/ |  | 
    driver.get("http://newtours.demoaut.com/");
    // 2 | assertElementPresent | name=userName |  | 
    {
      List<WebElement> elements = driver.findElements(By.name("userName"));
      assert(elements.size() > 0);
    }
    // 3 | type | name=userName | userTestAutom | 
    driver.findElement(By.name("userName")).sendKeys("userTestAutom");
    // 4 | assertElementPresent | name=password |  | 
    {
      List<WebElement> elements = driver.findElements(By.name("password"));
      assert(elements.size() > 0);
    }
    // 5 | type | name=password | passTestAutom | 
    driver.findElement(By.name("password")).sendKeys("passTestAutom");
    // 6 | assertElementPresent | name=login |  | 
    {
      List<WebElement> elements = driver.findElements(By.name("login"));
      assert(elements.size() > 0);
    }
    // 7 | click | name=login |  | 
    driver.findElement(By.name("login")).click();
    // 8 | select | name=fromPort | label=London | 
    {
      WebElement dropdown = driver.findElement(By.name("fromPort"));
      dropdown.findElement(By.xpath("//option[. = 'London']")).click();
    }
    // 9 | select | name=fromMonth | label=December | 
    {
      WebElement dropdown = driver.findElement(By.name("fromMonth"));
      dropdown.findElement(By.xpath("//option[. = 'December']")).click();
    }
    // 10 | select | name=fromDay | label=10 | 
    {
      WebElement dropdown = driver.findElement(By.name("fromDay"));
      dropdown.findElement(By.xpath("//option[. = '10']")).click();
    }
    // 11 | select | name=toPort | label=Paris | 
    {
      WebElement dropdown = driver.findElement(By.name("toPort"));
      dropdown.findElement(By.xpath("//option[. = 'Paris']")).click();
    }
    // 12 | select | name=toMonth | label=December | 
    {
      WebElement dropdown = driver.findElement(By.name("toMonth"));
      dropdown.findElement(By.xpath("//option[. = 'December']")).click();
    }
    // 13 | select | name=toDay | label=30 | 
    {
      WebElement dropdown = driver.findElement(By.name("toDay"));
      dropdown.findElement(By.xpath("//option[. = '30']")).click();
    }
    // 14 | click | xpath=(//input[@name='servClass'])[3] |  | 
    driver.findElement(By.xpath("(//input[@name=\'servClass\'])[3]")).click();
    // 15 | click | name=findFlights |  | 
    driver.findElement(By.name("findFlights")).click();
    // 16 | click | name=reserveFlights |  | 
    driver.findElement(By.name("reserveFlights")).click();
    // 17 | type | name=passFirst0 | Pepe | 
    driver.findElement(By.name("passFirst0")).sendKeys("Pepe");
    // 18 | type | name=passLast0 | Argento| 
    driver.findElement(By.name("passLast0")).sendKeysArgento
    // 19 | select | name=creditCard | label=Visa | 
    {
      WebElement dropdown = driver.findElement(By.name("creditCard"));
      dropdown.findElement(By.xpath("//option[. = 'Visa']")).click();
    }
    // 20 | type | name=creditnumber | 445545121887 | 
    driver.findElement(By.name("creditnumber")).sendKeys("445545121887");
    // 21 | select | name=cc_exp_dt_mn | label=12 | 
    {
      WebElement dropdown = driver.findElement(By.name("cc_exp_dt_mn"));
      dropdown.findElement(By.xpath("//option[. = '12']")).click();
    }
    // 22 | select | name=cc_exp_dt_yr | label=2010 | 
    {
      WebElement dropdown = driver.findElement(By.name("cc_exp_dt_yr"));
      dropdown.findElement(By.xpath("//option[. = '2010']")).click();
    }
    // 23 | click | name=buyFlights |  | 
    driver.findElement(By.name("buyFlights")).click();
    // 24 | assertText | css=tr:nth-child(3) > .frame_header_info b | London to Paris | 
    assertThat(driver.findElement(By.cssSelector("tr:nth-child(3) > .frame_header_info b")).getText(), is("London to Paris"));
    // 25 | verifyElementPresent | link=SIGN-OFF |  | 
    {
      List<WebElement> elements = driver.findElements(By.linkText("SIGN-OFF"));
      assert(elements.size() > 0);
    }
    // 26 | click | link=SIGN-OFF |  | 
    driver.findElement(By.linkText("SIGN-OFF")).click();
  }
}
