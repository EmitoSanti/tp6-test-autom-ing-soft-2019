/**
 * @author EmitoSanti
 */

package PrimertestautomatizadoTest;

// Generated Junit
import org.junit.After;
import org.junit.AfterClass;
import org.junit.Before;
import org.junit.BeforeClass;
import org.junit.Test;
import static org.junit.Assert.*;

// Generated by Selenium IDE
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Alert;
import org.openqa.selenium.Keys;
import java.util.*;
import org.openqa.selenium.support.ui.Select;

public class PrimertestautomatizadoTest {
    ChromeDriver driver;
    private Map<String, Object> vars;
    JavascriptExecutor js;

    public PrimertestautomatizadoTest() {
    }
    
    @BeforeClass
    public static void setUpClass() {
        // Seteo de driver de Chrome
        System.setProperty( "webdriver.chrome.driver", "D:\\chromedriver.exe");
    }
    
    @AfterClass
    public static void tearDownClass() {
    }
    
    @Before
    public void setUp() {
        driver = new ChromeDriver();
        js = (JavascriptExecutor) driver;
        vars = new HashMap<String, Object>();
    }
    
    @After
    public void tearDown() {
        driver.quit();
    }

    @Test
    public void primerTestAutomatizadoV01() {
   
        // Test name: Primer test-automatizado
        // Step # | name | target | value
        
        // Direccionar a la web a testear
        // 1 | open | http://newtours.demoaut.com/ |  
        driver.get("http://newtours.demoaut.com/");
        
        // Logueo a la web
        // 2 | assertElementPresent | name=userName |  
        {
          List<WebElement> elements = driver.findElements(By.name("userName"));
          assert(elements.size() > 0);
        }
        
        // 3 | type | name=userName | userTestAutom | 
        driver.findElement(By.name("userName")).sendKeys("userTestAutom");
        
        // 4 | assertElementPresent | name=password | 
        {
          List<WebElement> elements = driver.findElements(By.name("password"));
          assert(elements.size() > 0);
        }
        // 5 | type | name=password | passTestAutom
        driver.findElement(By.name("password")).sendKeys("passTestAutom");
        
        // 6 | assertElementPresent | name=login |  
        {
          List<WebElement> elements = driver.findElements(By.name("login"));
          assert(elements.size() > 0);
        }
        
        // 7 | click | name=login | 
        driver.findElement(By.name("login")).click();
        
        //Realiza Ruta de vuelo, origne y destino, fecha de salida y origen
        // 8 | select | name=fromPort | label=London 
        {
          Select dropdownfromPort = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[4]/td[2]/select")));
          dropdownfromPort.selectByVisibleText("London");
        }
        
        // 9 | select | name=fromMonth | label=December 
        {
          Select dropdownfromMonth = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[5]/td[2]/select[1]")));
          dropdownfromMonth.selectByVisibleText("December");
        }
        
        // 10 | select | name=fromDay | label=10 
        {
          Select dropdownfromDay = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[5]/td[2]/select[2]")));
          dropdownfromDay.selectByVisibleText("10");
        }
        
        // 11 | select | name=toPort | label=Paris
        {
          Select dropdowntoPort = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[6]/td[2]/select")));
          dropdowntoPort.selectByVisibleText("Paris");
        }
        
        // 12 | select | name=toMonth | label=December 
        {
          Select dropdowntoMonth = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[7]/td[2]/select[1]")));
          dropdowntoMonth.selectByVisibleText("December");
        }
        
        // 13 | select | name=toDay | label=30 
        {
          Select dropdowntoDay = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[7]/td[2]/select[2]")));
          dropdowntoDay.selectByVisibleText("30");
        }
        
        // Realiza seteo de clase
        // 14 | click | xpath=(//input[@name='servClass'])[3] | 
        driver.findElement(By.xpath("(//input[@name=\'servClass\'])[3]")).click();
       
        // Siguiente tab
        // 15 | click | name=findFlights |  
        driver.findElement(By.name("findFlights")).click();
        
        // Siguiente tab
        // 16 | click | name=reserveFlights |  
        driver.findElement(By.name("reserveFlights")).click();
        
        // Realiza seteo de datos del pasajero
        // 17 | type | name=passFirst0 | Pepe  
        driver.findElement(By.name("passFirst0")).sendKeys("Pepe");
        
        // 18 | type | name=passLast0 | Argento 
        driver.findElement(By.name("passLast0")).sendKeys("Argento");
        
        // Realiza seteo de forma de pago
        // 19 | select | name=creditCard | label=Visa 
        {
          Select dropdowncreditCard = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[6]/td/table/tbody/tr[2]/td[1]/select")));
          dropdowncreditCard.selectByVisibleText("Visa");
        }
        
        // 20 | type | name=creditnumber | 445545121887 
        driver.findElement(By.name("creditnumber")).sendKeys("445545121887");
        
        // 21 | select | name=cc_exp_dt_mn | label=12 
        {
          Select dropdowncc_exp_dt_mn = new Select(driver.findElement(By.xpath("//html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[6]/td/table/tbody/tr[2]/td[3]/select[1]")));
          dropdowncc_exp_dt_mn.selectByVisibleText("12");
        }
        
        // 22 | select | name=cc_exp_dt_yr | label=2010 
        {
          Select dropdowncc_exp_dt_yr = new Select(driver.findElement(By.xpath("/html/body/div/table/tbody/tr/td[2]/table/tbody/tr[4]/td/table/tbody/tr/td[2]/table/tbody/tr[5]/td/form/table/tbody/tr[6]/td/table/tbody/tr[2]/td[3]/select[2]")));
          dropdowncc_exp_dt_yr.selectByVisibleText("2010");
        }
        
        // Compra de pasaje
        // 23 | click | name=buyFlights |  
        driver.findElement(By.name("buyFlights")).click();
        
        //Verifica origen y destino
        // 24 | assertText | css=tr:nth-child(3) > .frame_header_info b | London to Paris 
        assertThat(driver.findElement(By.cssSelector("tr:nth-child(3) > .frame_header_info b")).getText(), is("London to Paris"));
        System.out.println( "Compra del pasaje efectuada" );
                
        // Log out
        // 25 | verifyElementPresent | link=SIGN-OFF | 
        {
          List<WebElement> elements = driver.findElements(By.linkText("SIGN-OFF"));
          assert(elements.size() > 0);
        }
        
        // 26 | click | link=SIGN-OFF |  | 
        driver.findElement(By.linkText("SIGN-OFF")).click();
        System.out.println( "Usuario deslogueado" );
    }
}
